* Input.Any by Neil ParkerINPUTTKN = 	$84 	;Asoft INPUT tokenPROMPT 	= 	$33 	;Prompt char for GETLNFORPNT 	= 	$85 	;Var ptr for GETSPTIN 	= 	$200 	;Buffer for GETLNCHRGET 	= 	$B1 	;Get next program tokenGDBUFS 	= 	$D539 	;Mask off hi bits of inputGETSPT 	= 	$DA7B 	;Assign FAC to str varSTRPRT 	= 	$DB3D 	;Print string in FACCHKSTR 	= 	$DD6C 	;TYPE MISMATCH if not stringSTRTXT 	= 	$DE81 	;Parse string from prog textSYNCHR 	= 	$DEC0 	;SYNTAX err if next token<>APTRGET 	= 	$DFE3 	;Parse var name, find in memERRDIR 	= 	$E306 	;ILLEGAL DIRECT if not runningSTRSPA 	= 	$E3DD 	;Get space for new strPUTNEW 	= 	$E42A 	;Make temp str descriptMOVSTR 	= 	$E5E2 	;Move data to str spaceGETLN 	= 	$FD6A 	;Read line of input 	ORG 	$300 	CMP 	#INPUTTKN ;Is it INPUT? 	BNE 	OUT 	;Skip if not 	JSR 	ERRDIR 	;Make sure prog is running 	JSR 	CHRGET 	;Get next token 	CMP 	#$22 	;Quote? 	BNE 	GETVAR 	;Don't prompt if not 	JSR 	STRTXT 	;Parse str const 	JSR 	STRPRT 	;Print it 	LDA 	#';' 	;Check for ';' 	JSR 	SYNCHRGETVAR 	JSR 	PTRGET 	;Parse var name 	STA 	FORPNT 	;Save its address 	STY 	FORPNT+1 	JSR 	CHKSTR 	;Error if not string 	LDA 	#$80 	;No prompt 	STA 	PROMPT 	JSR 	GETLN 	;Get input 	TXA 		;Save its length 	PHA 	JSR 	GDBUFS 	;Chop off hi bits 	PLA 		;Get saved len 	PHA 	JSR 	STRSPA 	;Get space for str 	LDY 	#>IN 	LDX 	#<IN 	PLA 	JSR 	MOVSTR 	;Move input to string space 	JSR 	PUTNEW 	;Make new temp descriptor 	JMP 	GETSPT 	;Assign descriptor to varOUT 	RTS 	LST 	OFF* Syntax: & INPUT ["prompt string";] string-variable* Only one variable per INPUT statement* Install with: POKE 1013,76:POKE 1014,0:POKE 1015,3