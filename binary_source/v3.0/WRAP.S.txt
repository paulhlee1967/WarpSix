* WRAP: Word wrap routine. Searches backwards in our
* input buffer for a space character and wraps to
* next line. Wraps maximum of 30 characters.

WRAP     CMP   #$A0       ;Is wrapping character a space?
         BNE   :DOWRAP    ;No, do the wrap.
         JSR   CLRCUR     ;get rid of screen cursor
         JSR   CROUT      ;print a CR
         LDA   #$A0
         RTS              ;return to TOBASIC

:DOWRAP  AND   #%01111111 ;kill high bit
         STA   WTMPCH     ;Save wrapping char.
         LDX   NUMCHAR    ;get character count
         DEX              ;look at last character
         LDY   #31        ;Look back maximum of 30 chars.
:CHKCHR  LDA   LINBUF,X   ;get char
         CMP   #$20       ;a space?
         BEQ   :FNDSPC    ;Yes. Wrap the word.
         DEX
         DEY
         BNE   :CHKCHR    ;Keep checking.

         STZ   WWCHAR     ;Truncate: place char on next line.

         LDA   WTMPCH     ;save the one character in wwbuf.
         STA   WWBUF
         LDA   #$A0       ;print space to erase cursor
         JSR   COUT
         BRA   :EXIT

:FNDSPC  LDY   #0         ;found a space
         STX   WTMPN      ;mark as true pos'n of e-o-l
         INX
         BRA   :ERASE     ;start loop with bs<sp>bs

:COPCHR  CPX   NUMCHAR    ;Finished copying wrap data?
         BEQ   :COPDON    ;Yes.
         LDA   LINBUF,X   ;get next char from buf
         STA   WWBUF,Y    ;save in our buf
         INX              ;point to next buf char
         INY              ;inc our buf ptr
:ERASE   JSR   PRBFB
         BRA   :COPCHR

:COPDON  LDA   WTMPCH     ;Save wrap char.
         STA   WWBUF,Y    ;save
         STY   WWCHAR     ;Save wwbuf length.
         LDX   WTMPN      ;get real eol
         STX   NUMCHAR    ;Save true length of line.

:EXIT    LDA   #$FF       ;Set wordwrap active.
         STA   WWACTV
         JMP   CROUT

* Wordwrap data area

WWCHAR   DFB   $0         ;Number of chars in ww buf.
WTMPCH   DFB   $0         ;Holds wrap character.
WTMPN    DFB   $0         ;Holds true line length.

* WWPRNT: print contents of wordwrap buffer.
* Uses A and X.

WWPRNT   LDX   #0         Zero byte counter.
         INC   WWCHAR     inc to total + 1 for compare
:PRCHR   LDA   WWBUF,X    get char from our buf
         STA   LINBUF,X   Put char in line buf.
         ORA   #%10000000 set high bit
         JSR   COUT       print it.
         INX              point to next
         CPX   WWCHAR     Finished?
         BNE   :PRCHR     always
:WWDONE  LDX   WWCHAR     Set line counter.
         STX   NUMCHAR
         STZ   WWCHAR
         STZ   WWACTV
         RTS              and we're done.
